---
title: "Interactive Map Example"
format: html
page-layout: full
---
| [Home](index.html) | [Simulations](sim.html) | [Deep Learning](dl.html) | [Field Work](fieldwork.html) | [IRSS](https://irsslab.forestry.ubc.ca/){target="_blank"} | [fRI Research](https://friresearch.ca/){target="_blank"} | [Contact](mailto:137965368+hambrecht@users.noreply.github.com) |
# Thunderbay

## My Interactive Map

```{r include=FALSE}
library(here)
library(leaflet)
library(leafem)
library(sf)
library(terra)
library(dplyr)
library(RColorBrewer)
privateLandImage <- rast("mapLayers/images/image003_WGS84.tif")
fracSnow <- rast("mapLayers/LC08_CU_020002_20250311_20250328_02_VIEWABLE_SNOW_CLIPPED_SCALED_SMALLEST.TIF")
fracSnowTiles <- "mapLayers/snowTiles/{z}/{x}/{y}.jpg"
studyArea <- st_read("mapLayers/studyAreaOntario.shp")
studyArea <- st_transform(studyArea, crs = 4326) # WGS84
surveyArea <- st_read("mapLayers/surveyArea.shp")
surveyArea <- st_transform(surveyArea, crs = 4326) # WGS84
aerodrome <- st_read("mapLayers/aerodrome.shp")
aerodrome <- st_transform(aerodrome, crs = 4326) # WGS84
canopyCover <-st_read("mapLayers/canopyCover.shp")
canopyCover <- st_transform(canopyCover, crs = 4326) # WGS84
canopyCover$STRUCTUR_9 <- round(canopyCover$STRUCTUR_9,0)
buildings <-st_read("mapLayers/OntarioGeoHub/buildingsClipped.shp")
buildings <- st_transform(buildings, crs = 4326) # WGS84
township <-st_read("mapLayers/OntarioGeoHub/GeographicTownshipClipped.shp")
township <- st_transform(township, crs = 4326) # WGS84
mooseWinterAreas <-st_read("mapLayers/OntarioGeoHub/mooseWinterAreas.shp")
mooseWinterAreas <- st_transform(mooseWinterAreas, crs = 4326) # WGS84
provincalPark <-st_read("mapLayers/OntarioGeoHub/provinalParkClipped.shp")
provincalPark <- st_transform(provincalPark, crs = 4326) # WGS84
recreationPoints <-st_read("mapLayers/OntarioGeoHub/recreationPointsClipped.shp")
recreationPoints <- st_transform(recreationPoints, crs = 4326) # WGS84
towers <-st_read("mapLayers/OntarioGeoHub/towersClipped.shp")
towers <- st_transform(towers, crs = 4326) # WGS84
lake <-st_read("mapLayers/OSM/dogLake.shp")
lake <- st_transform(lake, crs = 4326) # WGS84
roads <-st_read("mapLayers/OSM/road.shp")
roads <- st_transform(roads, crs = 4326) # WGS84


# Define a color palette based on the 'name' column

palElevation <- colorNumeric(
  palette = brewer.pal(9, "YlGnBu"),
  domain = c(0, 600)  # Set min and max values
)
palGreen <- colorNumeric(
  palette = brewer.pal(n = 9, name = "YlGn"),
  domain = canopyCover$STRUCTUR_9
)
palSnow <- colorNumeric(
  palette = rev(brewer.pal(n = 9, name = "PuBu")),
  domain = values(fracSnow),
  na.color = "transparent"   # make NAs transparent
)

```
```{r, include=FALSE}
plotRGB(privateLandImage, r = 1, g = 2, b = 3, stretch = "lin")
```
```{r leaflet-map, echo=FALSE}
leaflet() %>%
#Base layers
  addTiles() %>%
  # missing layer: https://www.gisapplication.lrc.gov.on.ca/CLUPA/Index.html?site=CLUPA&viewer=CLUPA&locale=en-US
  addTiles(
    "https://tile.opentopomap.org/{z}/{x}/{y}.png",
    layerId = "_14b46c75_d6e7_481f_b57d_a0bbb927294a",
    group = "Base layer: OpenTopo",
    options = WMSTileOptions()
  ) %>%
  addTiles(
    "https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png",
    layerId = "_e5657323_f251_4d70_9366_f5879b155d3e",
    group = "Base layer: Mapzen Global Terrain",
    options = WMSTileOptions()
  ) %>%
  addTiles(
    "https://datacube.services.geo.ca/wrapper/ogc/elevation-hrdem-mosaic",
    layerId = "Relief_map_of_the_Digital_Terrain_Model____________________Carte_de_relief_du_Mod_le_Num_rique_de_Terrain__139f2d65_7f2c_44b9_834a_01214bd59908",
    group = "Base layer: Relief map of DTM",
    options = WMSTileOptions(),
    attribution = "© Natural Resources Canada"
  ) %>%
  addTiles(
    urlTemplate = "https://ws.lioservices.lrc.gov.on.ca/arcgis2/rest/services/LIO_Imagery/Ontario_Imagery_Web_Map_Service/MapServer/WMTS/tile/1.0.0/LIO_Imagery_Ontario_Imagery_Web_Map_Service/default/GoogleMapsCompatible/{z}/{y}/{x}.jpg",
    attribution = "© Government of Ontario",
    group = "Base layer: Aerial Imagery"
  ) %>%
  addRasterRGB(
    privateLandImage,
     r = 1, g = 2, b = 3,
    # stretch = "lin", maxBytes = 5e+07,
    group = "Base layer: Private Land"
  )%>%
# Areas
  addPolygons(
    data = studyArea,
    color = "red",
    weight = 3,
    opacity = 1,
    fillOpacity = 0,
    group = "Area: Study Area"
  ) %>%
  addPolygons(
    data = surveyArea,
    color = "red",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.5,
    group = "Area:Survey Area"
  ) %>%
  addPolygons(
    data = provincalPark,
    color = "green",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.5,
    group = "Area:Provincal Park"
  ) %>%
  addPolygons(
    data = township,
    color = "purple",
    weight = 2,
    opacity = 1,
    fillOpacity = 0.5,
    group = "Area:Township"
  ) %>%
  addPolygons(
    data = lake,
    color = "blue",
    weight = 4,
    opacity =0,
    fillOpacity =0.8,
    popup = "Dog Lake",
    group = "Area:Lake"
  ) %>%
# Infrastructure
  addPolygons(
    data = aerodrome,
    color = "yellow",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.4,
    popup = "Aerodrome: Two Island Lake",
    group = "Aerodrome"
  ) %>%
  addCircles(
    data = buildings,
    radius = 1,
    opacity = 1,
    fillOpacity = 1,
    color = "brown",
    popup = "Building",
    group = "Infrastructure: Buildings"
  ) %>%
  addCircles(
    data = recreationPoints,
    radius = 3,
    opacity = 1,
    fillOpacity = 1,
    color = "green",
    popup = "Recreation point",
    group = "Infrastructure: Recreation points"
  ) %>%
  addCircles(
    data = towers,
    radius = 6,
    opacity = 1,
    fillOpacity = 1,
    color = "black",
    fillColor = "red",
    popup = "Tower",
    group = "Infrastructure: Towers"
  ) %>%
  addPolylines(
    data = roads,
    color = "black",
    weight = 2,
    opacity = 0.8,
    group = "Infrastructure: Roads"
  ) %>%
# Enviroment
  addPolygons(
    data = canopyCover["STRUCTUR_9"],
    fillColor = ~palGreen(canopyCover$STRUCTUR_9),
    weight = 1,
    opacity = 0,
    fillOpacity = 0.9,
    popup = ~paste0("Canopy Cover ", as.character(canopyCover$STRUCTUR_9),"%"),
    group = "Enviroment: Canopy Cover"
  ) %>%
  addPolygons(
    data = mooseWinterAreas,
    color = "orange",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.4,
    popup = "Moose wintering area",
    group = "Enviroment: Moose wintering area"
  ) %>%
  addRasterImage(
    fracSnow,
    colors = palSnow,
    group = "Enviroment: Snow Cover",
    addRasterImage
  ) %>%
  
  addLegend("bottomleft", col = c("red", "green", "purple", "blue"), label = c("Survey area", "Provincal Park","Township", "Dog Lake"), title = "Area") %>%
  addLegend("bottomleft", col = c("yellow", "brown", "green", "red", "black"), label = c("Aerodrome: Two Island Lake", "Building", "Recreation point", "Tower", "Road"), title = "Infrastructure") %>%
  addLegend("bottomleft", col = c(palGreen, "orange", palSnow), label = c("Canopy Cover", "Moose Wintering Area", "Fraction Snow Cover"), title = "Enviroment") %>%
  addLayersControl(
    overlayGroups = c("Base layer: OpenTopo", "Base layer: Mapzen Global Terrain", "Base layer: Relief map of DTM", "Base layer: Aerial Imagery", "Base layer: Private Land", "Area:Survey Area", "Area:Provincal Park", "Area:Township", "Area:Lake", "Aerodrome", "Infrastructure: Buildings", "Infrastructure: Recreation points", "Infrastructure: Towers", "Infrastructure: Roads", "Enviroment: Canopy Cover","Enviroment: Moose wintering area", "Enviroment: Snow Cover"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  hideGroup(c("Base layer: OpenTopo", "Base layer: Mapzen Global Terrain", "Base layer: Relief map of DTM", "Base layer: Aerial Imagery", "Base layer: Private Land", "Area:Provincal Park", "Area:Township", "Area:Lake", "Aerodrome", "Infrastructure: Buildings", "Infrastructure: Recreation points", "Infrastructure: Towers", "Infrastructure: Roads", "Enviroment: Canopy Cover","Enviroment: Moose wintering area", "Enviroment: Snow Cover"))
```

## Private land map

[link](https://www.lioapplications.lrc.gov.on.ca/CLUPA/index.html?viewer=CLUPA.CLUPA&locale=en-CA)


